name: Deploy Next.js to EC2

on:
  push:
    branches:
      - main  # or specify your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Specify the Node.js version you're using

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Sync project with EC2
      env:
        HOST_DNS: ${{ secrets.HOST_DNS }}
        USERNAME: ${{ secrets.USERNAME }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        TARGET_DIR: ${{ secrets.TARGET_DIR }}
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
        chmod 600 key.pem
        rsync -avz -e "ssh -o StrictHostKeyChecking=no -i key.pem" \
        --exclude '.git' \
        --exclude 'node_modules' \
        ./ ${{ env.USERNAME }}@${{ env.HOST_DNS }}:${{ env.TARGET_DIR }}/

    - name: Install dependencies on EC2
      env:
        HOST_DNS: ${{ secrets.HOST_DNS }}
        USERNAME: ${{ secrets.USERNAME }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        TARGET_DIR: ${{ secrets.TARGET_DIR }}
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.USERNAME }}@${{ env.HOST_DNS }} \
        "cd ${{ env.TARGET_DIR }} && npm install --production"

    - name: Start the application
      env:
        HOST_DNS: ${{ secrets.HOST_DNS }}
        USERNAME: ${{ secrets.USERNAME }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        TARGET_DIR: ${{ secrets.TARGET_DIR }}
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.USERNAME }}@${{ env.HOST_DNS }} \
        "cd ${{ env.TARGET_DIR }} && pm2 restart ai_customer_support || pm2 start npm --name 'ai_customer_support' -- start"

    - name: Clean up
      run: rm key.pem
